import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

plugins {
  id 'java'
  id 'org.springframework.boot' version '3.0.2'
  id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.example.kameleoon'
version = '1.0'
sourceCompatibility = '17'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
  implementation 'org.springdoc:springdoc-openapi-starter-common:2.0.2'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
  implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
  implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.liquibase:liquibase-core'
  compileOnly 'org.projectlombok:lombok'
  compileOnly 'org.mapstruct:mapstruct:1.5.3.Final'
  runtimeOnly 'com.h2database:h2'
  annotationProcessor 'org.projectlombok:lombok'
  annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
  annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
  useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
}

task newMigration {
  doLast {

    def pathToScriptsDir = java.nio.file.Path.of("${project.projectDir}/src/main/resources/db/migration/v1/1.0")

    String migrationId = "KTT-001-${DateTimeFormatter.ofPattern("yyyyMMddHHmm").format(LocalDateTime.now())}"

    pathToScriptsDir.resolve("_changelog-cumulative.yaml").append(
      """  - changeSet:
      id: ${migrationId}
      author: wvolfff
      comment: TODO
      changes:
        - sqlFile:
            path: 1.0/${migrationId}.sql
            relativeToChangelogFile: true
""")
    pathToScriptsDir.resolve("${migrationId}.sql").toFile().createNewFile()
  }
}

compileJava {
  options.compilerArgs.add('-Amapstruct.defaultComponentModel=spring')
}
